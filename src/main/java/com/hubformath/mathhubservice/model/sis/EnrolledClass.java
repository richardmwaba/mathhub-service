package com.hubformath.mathhubservice.model.sis;

import com.hubformath.mathhubservice.model.ops.cashbook.PaymentStatus;
import com.hubformath.mathhubservice.model.systemconfig.Subject;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.EnumType;
import jakarta.persistence.Enumerated;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;
import org.springframework.data.annotation.ReadOnlyProperty;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Objects;

@Entity
@Table(name = "classes")
@SuppressWarnings("DefaultAnnotationParam") // Columns generated by @JoinColumn are unique by default
public class EnrolledClass {
    @Id
    @GeneratedValue(strategy = GenerationType.UUID)
    private String id;

    @ManyToOne
    @JoinColumn(name = "subject_id", unique = false, nullable = false)
    private Subject subject;

    @Column(name = "occurrence")
    private int occurrencePerWeek;

    @Column(name = "start_date")
    private LocalDate startDate;

    @Column(name = "cost")
    private Double costPerSession;

    @Column(name = "duration")
    private int duration;

    @Enumerated(EnumType.STRING)
    @Column(name = "period")
    private LessonPeriod period;

    @Column(name = "end_date")
    private LocalDate endDate;

    @Enumerated(EnumType.STRING)
    @Column(name = "session_type")
    private SessionType sessionType;

    @Enumerated(EnumType.STRING)
    @Column(name = "payment_status")
    private PaymentStatus paymentStatus;

    @Enumerated(EnumType.STRING)
    @Column(name = "enrolment_status")
    private EnrolledClassStatus enrolmentStatus;

    @CreationTimestamp
    @ReadOnlyProperty
    @Column(name = "created_at")
    private LocalDateTime createdAt;

    @UpdateTimestamp
    @Column(name = "updated_at")
    private LocalDateTime updatedAt;

    @SuppressWarnings("unused")
    public EnrolledClass() {
        // Used for hibernate instantiation
    }

    public EnrolledClass(Subject subject,
                         int occurrencePerWeek,
                         LocalDate startDate,
                         Double costPerSession,
                         int duration,
                         LessonPeriod period,
                         LocalDate endDate,
                         SessionType sessionType) {
        this.subject = subject;
        this.occurrencePerWeek = occurrencePerWeek;
        this.startDate = startDate;
        this.costPerSession = costPerSession;
        this.duration = duration;
        this.endDate = endDate;
        this.period = period;
        this.sessionType = sessionType;
    }

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public Subject getSubject() {
        return subject;
    }

    public void setSubject(Subject subject) {
        this.subject = subject;
    }

    public int getOccurrencePerWeek() {
        return occurrencePerWeek;
    }

    public void setOccurrencePerWeek(int occurrencePerWeek) {
        this.occurrencePerWeek = occurrencePerWeek;
    }

    public LocalDate getStartDate() {
        return startDate;
    }

    public void setStartDate(LocalDate startDate) {
        this.startDate = startDate;
    }

    public Double getCostPerSession() {
        return costPerSession;
    }

    public void setCostPerSession(Double costPerSession) {
        this.costPerSession = costPerSession;
    }

    public int getDuration() {
        return duration;
    }

    public void setDuration(int duration) {
        this.duration = duration;
    }

    public LessonPeriod getPeriod() {
        return period;
    }

    public void setPeriod(LessonPeriod period) {
        this.period = period;
    }

    public LocalDate getEndDate() {
        return endDate;
    }

    public void setEndDate(LocalDate endDate) {
        this.endDate = endDate;
    }

    public SessionType getSessionType() {
        return sessionType;
    }

    public void setSessionType(SessionType sessionType) {
        this.sessionType = sessionType;
    }

    public PaymentStatus getPaymentStatus() {
        return paymentStatus;
    }

    public void setPaymentStatus(PaymentStatus paymentStatus) {
        this.paymentStatus = paymentStatus;
    }

    public EnrolledClassStatus getEnrolmentStatus() {
        return enrolmentStatus;
    }

    public void setEnrolmentStatus(EnrolledClassStatus enrolmentStatus) {
        this.enrolmentStatus = enrolmentStatus;
    }

    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o)
            return true;
        if (!(o instanceof EnrolledClass enrolledClass))
            return false;
        return Objects.equals(this.id, enrolledClass.id) && Objects.equals(this.occurrencePerWeek, enrolledClass.occurrencePerWeek)
                && Objects.equals(this.startDate, enrolledClass.startDate)
                && Objects.equals(this.costPerSession, enrolledClass.costPerSession)
                && Objects.equals(this.duration, enrolledClass.duration)
                && Objects.equals(this.period, enrolledClass.period)
                && Objects.equals(this.endDate, enrolledClass.endDate)
                && Objects.equals(this.sessionType, enrolledClass.sessionType)
                && Objects.equals(this.paymentStatus, enrolledClass.paymentStatus)
                && Objects.equals(this.enrolmentStatus, enrolledClass.enrolmentStatus);
    }

    @Override
    public int hashCode() {
        return Objects.hash(
                this.id,
                this.occurrencePerWeek,
                this.startDate,
                this.costPerSession,
                this.duration,
                this.sessionType,
                this.paymentStatus,
                this.enrolmentStatus,
                this.period,
                this.endDate);
    }

    @Override
    public String toString() {
        return "Class{" +
                "id='" + id + '\'' +
                ", subject=" + subject +
                ", occurrence=" + occurrencePerWeek +
                ", startDate=" + startDate +
                ", cost=" + costPerSession +
                ", duration=" + duration +
                ", period=" + period +
                ", endDate=" + endDate +
                ", sessionType=" + sessionType +
                ", paymentStatus=" + paymentStatus +
                ", enrolmentStatus=" + enrolmentStatus +
                '}';
    }
}