package com.hubformath.mathhubservice.model.ops.cashbook;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.hubformath.mathhubservice.model.auth.User;
import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.Objects;
import java.util.UUID;

@Entity
@Table(name = "receipts")
@SuppressWarnings("DefaultAnnotationParam") // Columns generated by @JoinColumn are unique by default
public class Receipt {
    @Id
    @GeneratedValue(strategy = GenerationType.UUID)
    @Column(name = "receipt_id")
    private String receiptId;

    @Column(name = "receipt_number")
    private String receiptNumber;

    @Column(name = "transaction_number")
    private String transactionNumber;

    @Column(name = "receipt_date")
    private LocalDate receiptDate;

    @ManyToOne
    @JoinColumn(name = "issued_by", unique = false, nullable = false)
    private User issuedBy;

    @CreationTimestamp
    @Column(name = "created_at")
    @JsonIgnore
    private LocalDateTime createdAt;

    @UpdateTimestamp
    @Column(name = "updated_at")
    @JsonIgnore
    private LocalDateTime updatedAt;

    public Receipt(String transactionNumber, User issuedBy) {
        this.receiptNumber = UUID.randomUUID().toString().toUpperCase().replace("-", "");
        this.transactionNumber = transactionNumber;
        this.receiptDate = LocalDate.now();
        this.issuedBy = issuedBy;
    }

    @SuppressWarnings("unused")
    public Receipt() {
        // Required by JPA
    }

    public String getReceiptId() {
        return receiptId;
    }

    public void setReceiptId(String receiptId) {
        this.receiptId = receiptId;
    }

    public String getReceiptNumber() {
        return receiptNumber;
    }

    public void setReceiptNumber(String receiptNumber) {
        this.receiptNumber = receiptNumber;
    }

    public String getTransactionNumber() {
        return transactionNumber;
    }

    public void setTransactionNumber(String transactionNumber) {
        this.transactionNumber = transactionNumber;
    }

    public LocalDate getReceiptDate() {
        return receiptDate;
    }

    public void setReceiptDate(LocalDate receiptDate) {
        this.receiptDate = receiptDate;
    }

    public User getIssuedBy() {
        return issuedBy;
    }

    public void setIssuedBy(User issuedBy) {
        this.issuedBy = issuedBy;
    }

    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (!(o instanceof Receipt receipt)) return false;
        return Objects.equals(getReceiptId(), receipt.getReceiptId())
                && Objects.equals(getReceiptNumber(), receipt.getReceiptNumber())
                && Objects.equals(getTransactionNumber(), receipt.getTransactionNumber())
                && Objects.equals(getReceiptDate(), receipt.getReceiptDate())
                && Objects.equals(getIssuedBy(), receipt.getIssuedBy());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getReceiptId(),
                            getReceiptNumber(),
                            getTransactionNumber(),
                            getReceiptDate(),
                            getIssuedBy());
    }

    @Override
    public String toString() {
        return "Receipt{" +
                "receiptId=" + receiptId +
                ", receiptNumber='" + receiptNumber + '\'' +
                ", transactionNumber='" + transactionNumber + '\'' +
                ", receiptDate=" + receiptDate +
                ", issuedBy=" + issuedBy +
                '}';
    }
}